Index: server/bin/www
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/bin/www b/server/bin/www
--- a/server/bin/www	(revision f942c68aa9c80e3a0143fbfcef554e4185658c72)
+++ b/server/bin/www	(revision 8bb484ab164bf2a26f8788cc5db632d5aaa12d14)
@@ -1,5 +1,7 @@
 #!/usr/bin/env node
 
+//FIXME (jc) czy ten plik jest wykorzystywany?
+
 /**
  * Module dependencies.
  */
Index: server/controllers/UserController.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/controllers/UserController.js b/server/controllers/UserController.js
--- a/server/controllers/UserController.js	(revision f942c68aa9c80e3a0143fbfcef554e4185658c72)
+++ b/server/controllers/UserController.js	(revision 8bb484ab164bf2a26f8788cc5db632d5aaa12d14)
@@ -134,6 +134,7 @@
         await User.findByIdAndUpdate(req.user._id,
             { $push: { ownedProjects: req.body.newProject._id} },
             {useFindAndModify: true })
+        // FIXME (jc) tutaj chyba brakuje /api 
         return res.status(201).redirect('/user/projects/owned/'+req.body.newProject._id);
     } catch (err) {
         return res.status(500).json({err: "Error due to updating documentation"})
Index: server/routes/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/routes/index.js b/server/routes/index.js
--- a/server/routes/index.js	(revision f942c68aa9c80e3a0143fbfcef554e4185658c72)
+++ b/server/routes/index.js	(revision 8bb484ab164bf2a26f8788cc5db632d5aaa12d14)
@@ -17,6 +17,7 @@
 });
 // USER
 
+//FIXME (jc) zmienna SERVER_PATH chyba nie jest potrzebna, komplikuje tylko budowanie linkow w aplikacji
 router.post(process.env.SERVER_PATH+'/register', UserController.registerNewUser)
 router.post(process.env.SERVER_PATH+'/login', UserController.login)
 router.delete(process.env.SERVER_PATH+'/logout', Auth.userAuth, Auth.logout)
Index: server/security/Registeration.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/security/Registeration.js b/server/security/Registeration.js
--- a/server/security/Registeration.js	(revision f942c68aa9c80e3a0143fbfcef554e4185658c72)
+++ b/server/security/Registeration.js	(revision 8bb484ab164bf2a26f8788cc5db632d5aaa12d14)
@@ -1,3 +1,6 @@
+//FIXME (jc) literowka w nazwie pliku (Registration.js)
+
+//FIXME (jc) modul 'dotenv' powinien byc wczytany tylko raz, najlepiej jak najwczesniej (np. w start.js)
 require('dotenv').config();
 const bcrypt = require('bcrypt');
 const User = require('../models/User');
Index: server/start.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server/start.js b/server/start.js
--- a/server/start.js	(revision f942c68aa9c80e3a0143fbfcef554e4185658c72)
+++ b/server/start.js	(revision 8bb484ab164bf2a26f8788cc5db632d5aaa12d14)
@@ -2,6 +2,7 @@
 const app = require('./app');
 const mongoose = require('mongoose');
 
+//FIXME (jc) ta funkcja zwraca Promise, powinno byc przynajmniej sprawdzenie czy nie zakonczyla sie bledem, np. poprzez .catch(...)
 mongoose.connect(
     process.env.DB_URL, {
         useNewUrlParser: true,
